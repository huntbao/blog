<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Don Quixote</title>
 <link href="http://gzool.com/atom.xml" rel="self"/>
 <link href="http://gzool.com/"/>
 <updated>2014-08-26T23:53:20+08:00</updated>
 <id>http://gzool.com</id>
 <author>
   <name>HuntBao</name>
   <email>huntbao@gmail.com</email>
 </author>

 
 <entry>
   <title>单页Web应用 译后记</title>
   <link href="http://gzool.com//2014/08/27/spa-afterword/"/>
   <updated>2014-08-27T00:00:00+08:00</updated>
   <id>http://gzool.com/2014/08/27/spa-afterword</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/public/images/spa.png&quot; alt=&quot;单页Web应用&quot;&gt;&lt;/p&gt;

&lt;p&gt;突然想为这本书写篇译后记，一来是出版社的老师已经提前发布了&lt;a href=&quot;http://gzool.com/2014/08/25/spa-errata-collect/&quot;&gt;《译者序》&lt;/a&gt;的内容，相同的文字再发一遍觉得没啥意思。二来正好还有几个关于本书的问题想说明一下。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;关于书名&lt;/p&gt;

&lt;p&gt;原书名是 Single Page Web Applications: JavaScript end-to-end。作者在脚注中说过本书还可以起名为Building Single Page Web Applications Using Best Practices，但他觉得不如前者直观干脆。end-to-end，第一个 end 指的是 frontend，即前端，第二个后端是 backend，即后端。&lt;/p&gt;

&lt;p&gt;就这么简单吗？其实未必，end-to-end，首尾是同个单词，它像是一个循环链表，囊括了所有的端，我想作者也正有此意吧。作为译者，我挺想使用另外一个书名：《单页Web应用：全端 JavaScript》。“全端”这个词在微博看到得比较多，我个人完全可以接受。但我咨询了很多人，多数人表示还难以接受，有点小失望。&lt;/p&gt;

&lt;p&gt;综合考虑，最终选了中规中矩的中文名：《单页 Web 应用：JavaScript 从前端到后端》。    &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;关于代码注释&lt;/p&gt;

&lt;p&gt;本书的代码注释没有翻译。这问题挺纠结，我之前看到过有很多人吐槽译者不翻译代码注释。大家可能会以为这是时间问题或者是译者偷懒。怎么说呢，不翻译注释的确是可以节省时间。但我想所有的译者，特别是像我种只能在业余时间翻译的译者，不会为了赶进度而不翻译注释，出版社给译者的时间还是很充足的，适当的延迟交付都是可以理解的。&lt;/p&gt;

&lt;p&gt;一开始我是打算翻译注释的，在译到第 3 章的时候，发现问题比较严重。因为有些注释翻译出来会显得很没意思，像标记代码区块开始的 BEGIN 以及标记代码区块结束的 END。这种词翻译后只会增加读者的阅读负担，让人觉得莫名其妙。我相信很多程序员本来就是用英文写注释的，特别是一些约定俗成的专有名词、惯例标记等。&lt;/p&gt;

&lt;p&gt;但还有其他一些解释性的注释呢，有些还是很重要的啊？纠结的问题就在这里，注释要么全部翻译，要么全部不翻译，总不能一会儿译一会儿不译，我至今也没有看到过这样的书，也没和编辑确认过。所以最后和编辑确认后就决定不译了。&lt;/p&gt;

&lt;p&gt;我知道上面这些为自己“开脱”的话既苍白又无力。但我以不是译者的身份再说说自己的想法。&lt;/p&gt;

&lt;p&gt;首先，作为程序员，要把英语拿起来，英语的重要性就不用我说了。不是说看译文就是在看别人消化后的东西（这我觉得没什么不好，译文的目的之一是提升读者的阅读速度），而是能流畅地看英文的话就能看标准和规范，也能第一时间欣赏国外作者的原创文章，这才是最吸引人的地方。&lt;/p&gt;

&lt;p&gt;其次，就这本书来说，第一遍看时可以不用看代码，不用“追根究底”，主要看正文部分作者的解释说明。其实很多书的代码都不用看，特别是大段大段的代码，光看正文足已，等要用到了再来仔细琢磨也来得及。如果你正好在开发一个和作者演示程序类似的项目，那另当别论。当然看不看代码因人而异，请根据自己的爱好习惯决定。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;这本书主要讲了什么东西？前端、后端还是全端？&lt;/p&gt;

&lt;p&gt;这本书重点讲的是单页应用的前端架构设计。但也讲了 Node.js、MongoDB、编码规范、测试等。这些在我看来都是附赠的内容，是 bonus，是为了“卖相”好看。但这些额外的内容都非常不错，毕竟占了这么大的篇幅，对于前端工程师来说可能是薄弱的环节甚至是盲点，但看无妨。人总喜欢完整的和对称的事物，作者不能光顾前端而不管后端，连演示程序也运行不起来，总有点说不过去。完整的事物有助于加深理解。&lt;/p&gt;

&lt;p&gt;作者讲解的单页应用架构，不管用的哪种后端都是适用的。这其实是废话，前端和后端早就被前辈们很好地隔离开了。所以这书我不但推荐前端仔细阅读，也建议会经常和前端打交道的后端仔细翻阅，当然投身全栈开发的更加不可以错过。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;好了，后记就写到这里，希望这本书能真正地帮到您，这才是最让我欣慰的！&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>单页Web应用 勘误收集</title>
   <link href="http://gzool.com//2014/08/25/spa-errata-collect/"/>
   <updated>2014-08-25T00:00:00+08:00</updated>
   <id>http://gzool.com/2014/08/25/spa-errata-collect</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/public/images/spa.png&quot; alt=&quot;单页Web应用&quot;&gt;&lt;/p&gt;

&lt;p&gt;此篇博客作为本书勘误收集而用，若译文有误或者有任何疑问，欢迎留下评论，或者给我发邮件(地址：&lt;a href=&quot;mailto:gzooler@gmail.com&quot;&gt;gzooler@gmail.com&lt;/a&gt;)非常感谢。&lt;/p&gt;

&lt;h2&gt;购买地址&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;敬请期待&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;附:《译者序》&lt;/h2&gt;

&lt;p&gt;单页 Web 应用（single page web application，简称 SPA）无疑是目前网站开发技术的弄潮儿，很多传统网站都在或者已经转型为单页应用，新的单页 Web 应用网站（包括移动平台上的）也如雨后春笋般涌现出来，如 Gmail、Evernote、Trello 等。如果你是一名 Web 开发人员，却还没开发过或者甚至是没有听说过单页应用，那你已经 Out 很久了。&lt;/p&gt;

&lt;p&gt;单页 Web 应用和前端工程师息息相关，因为最主要的变革发生在浏览器端，用到的技术其实还是 HTML+CSS+JavaScript，所有的浏览器都原生支持，当然有的浏览器因为具备一些高级特性，从而使得单页Web应用的用户体验更上一层楼。关于单页应用的优点和缺点，网上讲解的文章有很多，这里就不展开论述了。&lt;/p&gt;

&lt;p&gt;单页 Web 应用，顾名思义，就是只有一张 Web 页面的应用。浏览器一开始会加载必需的 HTML、CSS 和 JavaScript，之后所有的操作都在这张页面上完成，这一切都由 JavaScript 来控制。因此，单页Web应用会包含大量的 JavaScript 代码，复杂度可想而知，模块化开发和架构设计的重要性不言而喻。&lt;/p&gt;

&lt;p&gt;随着单页Web应用的崛起，各种框架也不断涌现，如 Backbone.js、Ember.js、Angular.js 等，还有 RequireJS 等模块加载器。但是，本书没有讲解这些框架和模块加载器，这也正是我最喜欢这本书的地方。作者坦言自己很少使用框架，认为框架的限制过多，一旦不符合框架本身的设计哲学，结果可能适得其反。在翻译的过程中，曾多次想给作者鼓掌，因为我一直以来的观点和想法多次和作者的不谋而合。当然我和作者一样，也并不反对使用框架。不管是按照书中的方法来开发，还是决定使用其他可用的框架库，书中的思想都是适用的。&lt;/p&gt;

&lt;p&gt;本书作者主要是介绍他们多年来开发单页Web应用网站的经验，他们已经从中提炼出单页 Web 应用的架构设计，这些架构设计思想是本书的精华所在，是本书最有价值且最值得回味和学习的知识。我特别欣赏作者那种毫无保留的分享精神和对技术认真严肃的态度，讲解的过程中一直担心遗漏了什么，结果使得本书的篇幅大大超出了他们最初的计划。&lt;/p&gt;

&lt;p&gt;本书前面 6 章都在讲解单页 Web 应用的客户端。鉴于完整性的需要，最后 3 章讲的是服务端技术，同样讲得深入浅出，推荐所有 Web 开发人员尤其是前端工程师仔细阅读。作者特意选择和 JavaScript 相关的服务端技术，即 Node.js 和 MongoDB。作者想证明全栈 JavaScript 开发的可行性。作者表示结果是令他们自己满意的。当然服务端也可以选择其他平台，作者从来没有也不会说 Node.js 和 MongoDB 是最好的服务端技术，这一点也是特意强调过的。最后还添加了两个附录，分别介绍 JavaScript 的编码规范和单页 Web 应用的测试，这也是程序开发的两大话题，很值得一读。&lt;/p&gt;

&lt;p&gt;单页 Web 应用的开发会遇到很多挑战，但我相信随着技术的不断发展和人们的不断努力，这些挑战会被一一突破。比如，目前棘手的 SEO 问题，需要搜索引擎公司和开发人员的不断尝试和配合，我相信会有那么一天，SEO 的问题将不复存在。&lt;/p&gt;

&lt;p&gt;由于本人水平有限，加之时间仓促，翻译过程中难免有纰漏之处，敬请广大读者批评指正。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>jQuery、jQuery UI及jQuery Mobile技巧与示例 勘误收集</title>
   <link href="http://gzool.com//2013/05/12/jquery-recipes-and-examples-errata-collect/"/>
   <updated>2013-05-12T00:00:00+08:00</updated>
   <id>http://gzool.com/2013/05/12/jquery-recipes-and-examples-errata-collect</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/public/images/jquery-recipes.jpg&quot; alt=&quot;jQuery技巧与示例&quot;&gt;&lt;/p&gt;

&lt;p&gt;此书由程学彬 （&lt;a href=&quot;http://weibo.com/ironbin&quot;&gt;http://weibo.com/ironbin&lt;/a&gt;）和我合译完成，此篇博客作为勘误收集而用，若译文有误或者有任何疑问，欢迎留下评论，或者给我发邮件(地址：&lt;a href=&quot;mailto:gzooler@gmail.com&quot;&gt;gzooler@gmail.com&lt;/a&gt;)或者联系程学彬，非常感谢。&lt;/p&gt;

&lt;h2&gt;购买地址&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;京东：&lt;a href=&quot;http://item.jd.com/11298722.html&quot;&gt;http://item.jd.com/11298722.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;亚马逊：&lt;a href=&quot;http://www.amazon.cn/jQuery-jQuery-UI%E5%8F%8AjQuery-Mobile%E6%8A%80%E5%B7%A7%E4%B8%8E%E7%A4%BA%E4%BE%8B-%E6%89%AC/dp/B00EH8DFNA/ref=sr_1_1&quot;&gt;http://www.amazon.cn/jQuery-jQuery-UI%E5%8F%8AjQuery-Mobile%E6%8A%80%E5%B7%A7%E4%B8%8E%E7%A4%BA%E4%BE%8B-%E6%89%AC/dp/B00EH8DFNA/ref=sr_1_1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;当当网：&lt;a href=&quot;http://product.dangdang.com/23316600.html&quot;&gt;http://product.dangdang.com/23316600.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;附:《译者序》&lt;/h2&gt;

&lt;p&gt;编程是需要技巧的。&lt;/p&gt;

&lt;p&gt;这里说的技巧并非指奇技淫巧，而是对所使用编程语言的特性和API的熟练掌握和灵活运用。&lt;/p&gt;

&lt;p&gt;曾经有位朋友问我该如何深入地学习一门语言。我说别的我不好说，但有一点是可以肯定的，就是对该门语言提供的API要非常熟悉。今天这个功能用了这个API来实现，明天开发同样的功能时就想办法用别的API来实现。&lt;/p&gt;

&lt;p&gt;我高中的语文老师曾说过一段话，让我此生都受益匪浅。他说你们今天看到了漂亮的词语、成语或者语句，就应该把它们记下来并想方设法地用到下次的作文中去。我想这方法是同样适用于编程的。万事开头难，在能举一反三和融会贯通之前，只能一点一滴地开始积累，大家都是这么一步一步走过来的。期间有人走得快，也有人走得慢，但这并不能阻止你一直前进的步伐。&lt;/p&gt;

&lt;p&gt;当然编程还需要其他很多专业知识，比如数据结构和算法、设计模式等等，按照从事的特定领域，又需要更多的专业技能。我上面说的对API做到举手投足只是最基本的要求之一。&lt;/p&gt;

&lt;p&gt;本书涵盖了jQuery、jQuery UI、jQuery Mobile以及jQuery插件共四大块的技术，内容丰富全面。那么这本区区几百页的书能把上面这些内容都讲解得非常细致吗？答案当然是否定的。作者精挑细选的技巧示例只是一些典型的代表，希望起到抛砖引玉的作用。作者根据自己的知识水平和累积经验，用生动的语言来向我们演示它们的用法以及该注意的地方。比如要操作两个独立的选取集中的含有特定类名的元素，很多人可能就会写上两句样板代码，细心的人可能会提取一个函数出来。这里就可以使用合并选取集的技巧（即add方法）。这就是我所说的技巧，小而美的技巧。&lt;/p&gt;

&lt;p&gt;前端技术日新月异，更新很快，书本中的有些内容已经过时，但这并不会有什么影响。当然权威的解释只有官方文档，实际开发的时候要以最新的官方文档为准。书本只是茶余饭后快速学习的手段之一。&lt;/p&gt;

&lt;p&gt;感谢杨海玲老师给我翻译此书的机会。在翻译过程中，我对每个技巧和示例都认真进行了验证核对，对每一句话都推敲再三，生怕表达不清而误导了读者。但本人水平有限，加之时间仓促，书中难免有纰漏之处，敬请广大读者批评指正。
本书的翻译由我的好友程学彬和我合作完成，感谢杨海玲老师在翻译过程中给予的充分信任和支持，感谢出版社编辑们认真仔细的编校工作。&lt;/p&gt;

&lt;p&gt;今天是母亲节，借此机会也向我的妈妈表达一下我无以言表的爱：您的乐观豁达开朗是我此生弥足珍贵的财富。也感谢一直支持我和关心我的朋友，能认识你们我已很知足。&lt;/p&gt;

&lt;p&gt;今天也是汶川地震五周年祭，汶川之殇，举国之痛。悲痛往事不想多提，相信重生后的你们定如凤凰涅槃，美丽无比。&lt;/p&gt;

&lt;p&gt;包勇明&lt;/p&gt;

&lt;p&gt;2013年5月12日　于上海&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>jQuery UI开发指南 勘误收集</title>
   <link href="http://gzool.com//2012/08/01/jqueryui-developer-guide-errata-collect/"/>
   <updated>2012-08-01T00:00:00+08:00</updated>
   <id>http://gzool.com/2012/08/01/jqueryui-developer-guide-errata-collect</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/public/images/jqueryui.jpg&quot; alt=&quot;jQuery UI&quot;&gt;&lt;/p&gt;

&lt;p&gt;此书由罗晴明 （&lt;a href=&quot;http://weibo.com/sunnylqm&quot;&gt;http://weibo.com/sunnylqm&lt;/a&gt;）和我合译完成，此篇博客作为勘误收集而用，若译文有误或者有任何疑问，欢迎留下评论，或者给我发邮件(地址：&lt;a href=&quot;mailto:gzooler@gmail.com&quot;&gt;gzooler@gmail.com&lt;/a&gt;)或者联系罗晴明，非常感谢。&lt;/p&gt;

&lt;h2&gt;购买地址&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;京东：&lt;a href=&quot;http://item.jd.com/11127008.html&quot;&gt;http://item.jd.com/11127008.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;亚马逊：&lt;a href=&quot;http://www.amazon.cn/jQuery-UI%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97-Eric-Sarrion/dp/B00A6FDZ74/ref=sr_1_1&quot;&gt;http://www.amazon.cn/jQuery-UI%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97-Eric-Sarrion/dp/B00A6FDZ74/ref=sr_1_1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;当当网：&lt;a href=&quot;http://product.dangdang.com/22910975.html&quot;&gt;http://product.dangdang.com/22910975.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;附:《译者序》&lt;/h2&gt;

&lt;p&gt;本书是由O’Reilly出版的第一本关于jQuery UI的书籍。&lt;/p&gt;

&lt;p&gt;前端技术已经受到越来越多程序员的青睐，相信有很多前端工程师，包括我自己，都渴望在短时间内学习并掌握jQuery UI，特别是在项目开始时犹豫是否使用jQuery UI的时候，本书对于学习jQuery UI会有极大的帮助。&lt;/p&gt;

&lt;p&gt;jQuery UI的官方文档有些地方写得过于简单，没有详细解释，不易理解。本书作者Eric Sarrion在每章的开始先介绍组件的基本使用方法，然后用通俗易懂的语言详细说明组件的配置及事件选项，最后通过精挑细选、循序渐进的示例帮助读者巩固学到的知识点。我在翻译此书的过程中收获颇丰，对jQuery UI的细节部分和使用场景都有了更深入的理解。本书是对jQuery UI官方文档的强有力的补充和说明，可以作为实际开发时的参考手册。&lt;/p&gt;

&lt;p&gt;本书讲解的jQuery UI版本是1.8.16，而非官方最新版本（1.8.23）。可能有朋友担心会不会过时了？几乎所有的技术类书籍都难以避免这样的问题，图书出版的速度永远赶不上技术更新的速度。对于本书（相信还有很多其他书）这种担心是多余的。本书讲解的内容和最新版本的几乎是一样的。本书能够帮助读者掌握jQuery UI的使用方法，使初学者能够快速入门，全面掌握jQuery UI，使有经验的读者在使用jQuery UI时能够更加得心应手，提高开发效率，丰富页面展示效果，提升用户体验。&lt;/p&gt;

&lt;p&gt;如果你刚刚接触jQuery UI，希望系统地学习jQuery UI，本书是极佳的选择。如果你是一位“久经沙场”的开发人员，并已经熟读了jQuery UI的官方文档，我依然向你推荐这本书，感受一下别人眼中的jQuery UI，同时也不失学习的乐趣。&lt;/p&gt;

&lt;p&gt;本书也适合非开发人员阅读，比如设计师。不是说让设计师来做开发的工作，而是从中学习“标准”UI组件的视觉外观和交互逻辑，在设计页面时能开拓思路，设计出更加专业和利于用户交互的界面。&lt;/p&gt;

&lt;p&gt;我在一个很偶然的情况下得到了翻译此书的机会。在翻译过程中，我力求在文字与内容上忠实原著，并对每一个技术点都认真进行了验证核对，对每一句话都推敲再三，生怕表达不清而误导了读者。但本人水平有限，加之时间仓促，书中难免有纰漏之处，敬请广大读者批评指正。&lt;/p&gt;

&lt;p&gt;本书的翻译由罗晴明和我合作完成，感谢杨海玲老师在翻译过程中给予的充分信任和支持，感谢出版社编辑们认真仔细的编校工作。&lt;/p&gt;

&lt;p&gt;包勇明&lt;/p&gt;

&lt;p&gt;2012年8月　于上海&lt;/p&gt;
</content>
 </entry>
 

</feed>
